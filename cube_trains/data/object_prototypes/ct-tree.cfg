{
id: "ct-tree",
prototype: ["ct-block"],
zsub_order: 2,
properties: {
	set_alpha: "def(val) map(objs, 'obj', set(obj.alpha, val+200 #Sort of nudge the alpha down a level so it matches the blocks below it, since it looks kind of funny otherwise.#)) where objs = vars.overlays + [self]",
	additionalPlacementRequirementsMet: "def(chars) 
			if(not '${self.type}.tip' in transform(potentially_at_coord(list_add(self.vars.location, [0,0,1]), chars), v.type),
				{'error' -> 'The tree is too tall to fit here.'},
				if(not 'ground' in groups_at(list_add(location, [0,0,-1]), chars),
					{'error' -> 'No suitable substrate to plant tree in.'},
					{'ok' -> 1})
				)",
	additionalBlocks: "def(chars)
			[{'id' -> '${self.type}.tip', 'pos' -> [0,0,1]}]",
},
vars: {
	group: ["center", "center-top"],

	#this is for legal moves
	bonus: ["tree"],

	#and this is for scoring
	editable: 1,
	cost: -30,
},
}