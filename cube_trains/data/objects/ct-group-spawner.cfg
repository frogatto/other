{
id: "ct-group-spawner",
prototype: ["ct-block", "ct-pather"],
properties: {
	message: "
		'a/o/e or equivalent to edit:\n' + 
		'  Crowd Diameter: {vars.save_val[0]} {if(vars.save_val[0] > 1, ~tiles~, ~tile~)}' + if(sve = 0, ' {selector}', '') + '\n' + 
		'  Crowd Population: {vars.save_val[1]} {if(vars.save_val[1] > 1, ~people~, ~person~)}' + if(sve = 1, ' {selector}', '')
		where selector = 'Ð¤' 
		where sve = vars.save_val_edit",
		
	change_save_val: "def(val) switch(vars.save_val_edit, 
		0, set(vars.save_val, list_replace_elements(vars.save_val, 0, [max(vars.save_val[0]+val,   1)])),
		1, set(vars.save_val, list_replace_elements(vars.save_val, 1, [max(vars.save_val[1]+val*4, 1)])),
		debug('change_save_val error in ${self.type}. Index ${vars.save_val_edit} is not registered.'))",
	
	set_alpha: "def(val) map(objs, 'obj', set(obj.alpha, (val+200)*level.player.vars.edit_all )) where objs = vars.overlays + [self]",
	additionalPlacementRequirementsMet: "def(chars) if('ground' in groups, {'ok' -> 1}, {'ok' -> 0, 'error' -> 'There was nothing suitable to spawn a group of people on.'}) where groups = groups_at(list_add(location, [0,0,-1]), chars)",
},

vars: {
	group: ["group-spawner"],
	save_val: [3,25,'general'],
	save_val_edit: 0,
},

on_first_cycle: "[proto_event('ct-block', 'first_cycle'), schedule(1, fire_event('first_cycle2'))]",
on_first_cycle2: "[if(not level.player.vars.edit_all, 
	transform(
		transform(range(spawnNumber), object('ct-person', self.midpoint_x, self.midpoint_y, [-1,1][(1d2)-1], {
				'location': [at[0], at[1], self.vars.location[2]],
				})
			where at = orbit(	vars.location[0],
								vars.location[1],
								1d180,
								(((5d(100)-5)/100.0-2.5)/3.75)*spawnRadius )),
		if('ground' in underNewLoc and (not 'ground' in atNewLoc), add_object(v))
			where atNewLoc = queryGroupMap(on_block(v.vars.location)) #THIS IS BROKEN#
			where underNewLoc = queryGroupMap(list_add([0,0,-1], on_block(v.vars.location)))
		
		)
	where	spawnRadius =	vars.save_val[0]
	where	spawnNumber =	vars.save_val[1]
	where	spawnMixName =	vars.save_val[2] ),
	debug(queryGroupMap(list_add([0,0,-1], location))),
	schedule(1, fire_event('debug')),
	]",

on_ctrl_select: "set(save_val_edit, (save_val_edit+1)%(size(save_val)-1))",

animation: [
		{
			"@base": true,
			"scale": 1
		},
		{
			"id": "normal",
			"image": "experimental/cube trains/0148.png",
			"rect": [0,0,255,255]
		}
	],
}
