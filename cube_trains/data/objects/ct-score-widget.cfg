{
id: "ct-score-widget", #This is basically a text_controller from Frogatto with a different prototype.
prototype: ["base_input"],
ignore_collide: true,
hidden_in_game: true,
zorder: 100000,
properties: {
	set_text: "def(text) [set(me.vars.txt, text), fire_event(me, 'load')]",
	update: "def(score) [
		self.set_text('Score: ${score}') where score=score,
		set(vars.displayedScore, score),
		fallingTextController.set_text({text:score-displayedScore, size:self.vars.size, align:left}),
		set(fallingTextController.velocity_y, 50),
		set(fallingTextController.z, self.z-1),
		set(fallingTextController.use_absolute_screen_coordinates, true),
		map(range(100), schedule(value, set(fallingTextController.text_alpha, constrain(0, 400-value*4, 255)))),
		schedule(100, remove_object(fallingTextController)),
		if(cycle > 5 and score-displayedScore, add_object(fallingTextController)),
		] where fallingTextController = object('text_controller', x+65, y+40, facing)",
},
vars: {
	txt: "TEXT",
	size: 1,
	centered: 0,
},
on_load: "[
		if(txt, text(txt, 'white_outline', size, centered)),
		]",
on_editor_changed_variable: "fire_event('load')",
on_end_anim: "animation('normal')",
animation: [
		{
			"@base": true,
			"scale": 1
		},
		{
			"duration": 1000,
			"frames": 1,
			"h": 28,
			"id": "normal",
			"image": "effects/particles.png",
			"w": 28,
			"x": 148,
			"y": 42
		}
	],
}
