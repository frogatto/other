{
	id: "cube2_playable",
	is_human: true,
	hitpoints: 4,
	editor_info: { category: "player" },
    vars: { selected: false },
    consts: {
        tile_size_x: 32,
        tile_size_y: 32,
        search_radius: 4,
    },
    properties: {
        pt_in_rect: "def (px, py, rx, ry, rw, rh) 
            if(px >= rx and px < rx+rw and py >= ry and py < ry+rh, true, false)",
        snap_pt: "def(x,y) [x-x%consts.tile_size_x, y-y%consts.tile_size_y]",
        interpolate: "def(x1,x2) [(x2-x1)*v/50.0+x1 | v <- range(0,50)]",
        norm_distance: "def(a,b) sqrt(((a[0]-b[0])/consts.tile_size_x)^2 + ((a[1]-b[1])/consts.tile_size_y)^2)",
        // t: current time, b: begInnIng value, c: change In value, d: duration
        // easeInQuad: def(x, t, b, c, d) { c*(t/=d)*t + b },
    },
	animation: [
		{
            id: "stand",
            image: "cube.png",
            rect: [0,0,15,15]
		}
	],
	on_load: "[
        debug('Loaded level graph'), 
        set(tmp.moving, false),
        [
            set(vars.level_graph, graph), 
            set(tmp.possible_moves, path_cost_search(graph, snap_pt(x,y), consts.search_radius))
        ] where graph = weighted_graph(
            create_graph_from_level(level, consts.tile_size_x, consts.tile_size_y), 
            norm_distance(a,b)),
        
    ]",
    on_schedule_finished: "[
        set(tmp.moving, false),
        set(tmp.possible_moves, path_cost_search(vars.level_graph, snap_pt(x,y), consts.search_radius)),
    ]",
	"on_mouse_up*": "
        if(mouse_button=1 and tmp.moving=false,
            map(tmp.possible_moves, v, 
            if(pt_in_rect(mouse_x,mouse_y, v[0],v[1],consts.tile_size_x,consts.tile_size_y), [
                set(x_schedule, interpolate(x, mouse_x)), 
                set(y_schedule, interpolate(y, mouse_y)), 
                set(schedule_expires, true),
                set(tmp.moving, true),
                //set(schedule_speed, 2),
                set(tmp.possible_moves,null)]
                )
            )
        )
    ",
    on_draw: "if(tmp.possible_moves and tmp.moving=false, 
        map(tmp.possible_moves, v, 
            debug_rect(v[0]+8, v[1]+8, consts.tile_size_x-16, consts.tile_size_y-16)))",
}
